const themes = [
  {
    id: 'grammaire',
    name: 'Grammaire',
    icon: 'üìù',
    description:
      'Analyse de la phrase complexe, fonctions et classes grammaticales au programme de 3·µâ.'
  },
  {
    id: 'orthographe',
    name: 'Orthographe',
    icon: '‚úçÔ∏è',
    description:
      "Homophones, accords difficiles et pi√®ges de l'√©crit pour viser l'excellence."
  },
  {
    id: 'vocabulaire',
    name: 'Vocabulaire',
    icon: 'üìö',
    description:
      'Nuances de sens, pr√©fixes, suffixes et champs lexicaux essentiels pour le DNB.'
  },
  {
    id: 'conjugaison',
    name: 'Conjugaison',
    icon: '‚ö°',
    description: 'Temps du r√©cit, voix active/passive et valeurs des modes.'
  },
  {
    id: 'litterature',
    name: 'Litt√©rature',
    icon: 'üìñ',
    description:
      'Rep√®res culturels et grandes ≈ìuvres √©tudi√©es au coll√®ge, genres et mouvements.'
  },
  {
    id: 'expression',
    name: 'Expression √©crite',
    icon: '‚úíÔ∏è',
    description:
      'Techniques de r√©daction, argumentation et coh√©rence du discours.'
  },
  {
    id: 'comprehension',
    name: 'Compr√©hension',
    icon: 'üß†',
    description:
      'Lecture fine, implicite, organisation du texte et strat√©gie de r√©ponse.'
  },
  {
    id: 'figures',
    name: 'Figures de style',
    icon: 'üé≠',
    description: 'Identifier et analyser les proc√©d√©s expressifs des textes litt√©raires.'
  }
];

const questionBank = {
  grammaire: [
    {
      question:
        "Dans la phrase : 'Les romans que tu m'as pr√™t√©s sont captivants', quelle est la fonction de la proposition subordonn√©e relative ?",
      options: [
        'Compl√©ment circonstanciel de mani√®re',
        'Compl√©ment du nom',
        'Compl√©ment d‚Äôobjet indirect',
        'Apposition'
      ],
      answer: 1,
      explanation:
        "La proposition relative introduite par 'que' pr√©cise le nom 'romans' : elle est donc compl√©ment du nom."
    },
    {
      question:
        "Quelle est la classe grammaticale de 'dont' dans la phrase : 'Voil√† l'≈ìuvre dont je t'ai parl√©' ?",
      options: ['Pronom relatif', 'Adverbe interrogatif', 'Conjonction de subordination', 'D√©terminant ind√©fini'],
      answer: 0,
      explanation:
        "'Dont' remplace un compl√©ment introduit par 'de' et relie la proposition subordonn√©e relative au nom : c'est un pronom relatif."
    },
    {
      question:
        "Dans 'Ils ont √©lu L√©a d√©l√©gu√©e', quelle est la fonction du groupe nominal 'd√©l√©gu√©e' ?",
      options: [
        'Attribut du sujet',
        'Compl√©ment d‚Äôobjet indirect',
        'Compl√©ment d‚Äôobjet second',
        'Attribut du compl√©ment d‚Äôobjet direct'
      ],
      answer: 3,
      explanation:
        "Le COD 'L√©a' est compl√©t√© par 'd√©l√©gu√©e' qui indique le r√©sultat de l'action : c'est un attribut du COD."
    },
    {
      question:
        "Dans la phrase : 'Bien qu'il f√ªt √©puis√©, il continua', quel est le mode du verbe 'f√ªt' et quelle valeur exprime-t-il ?",
      options: [
        'Indicatif, valeur de certitude',
        'Subjonctif, valeur de concession',
        'Subjonctif, valeur d‚Äôhypoth√®se',
        'Conditionnel, valeur d‚Äôirr√©el'
      ],
      answer: 1,
      explanation:
        "'F√ªt' est au subjonctif imparfait. Dans une proposition concessive introduite par 'bien que', il exprime la concession."
    },
    {
      question:
        "Quel est le sujet r√©el dans : 'Il est arriv√© trois nouveaux √©l√®ves' ?",
      options: [
        'Il',
        'trois',
        'trois nouveaux √©l√®ves',
        'nouveaux √©l√®ves'
      ],
      answer: 2,
      explanation:
        "Le pronom 'il' est sujet apparent ; le v√©ritable sujet est le groupe nominal 'trois nouveaux √©l√®ves'."
    },
    {
      question:
        "Dans 'Nous consid√©rons que ce projet est ambitieux', comment s'analyse la subordonn√©e introduite par 'que' ?",
      options: [
        'Compl√©ment d‚Äôobjet direct du verbe consid√©rer',
        'Compl√©ment de phrase',
        'Apposition au nom projet',
        'Compl√©ment du nom projet'
      ],
      answer: 0,
      explanation:
        "Le verbe 'consid√©rer' admet pour COD la subordonn√©e compl√©tive 'que ce projet est ambitieux'."
    }
  ],
  orthographe: [
    {
      question:
        "Quelle phrase respecte la r√®gle d'accord du participe pass√© employ√© avec l'auxiliaire avoir ?",
      options: [
        "Les chansons que j'ai √©cout√© sont entra√Ænantes",
        "Les chansons que j'ai √©cout√©es sont entra√Ænantes",
        "Les chansons que j'ai √©cout√©s sont entra√Ænantes",
        "Les chansons que j'ai √©cout√©e sont entra√Ænantes"
      ],
      answer: 1,
      explanation:
        "Le COD 'les chansons' est plac√© avant le participe pass√© : on accorde donc '√©cout√©es' au f√©minin pluriel."
    },
    {
      question:
        "Quel est l'homophone correct pour compl√©ter : 'Ils ont ... leurs devoirs avant de sortir' ?",
      options: ['fais', 'fait', 'faits', 'faises'],
      answer: 2,
      explanation:
        "Le participe pass√© 'faits' s'accorde avec le COD 'leurs devoirs' plac√© avant l'auxiliaire avoir."
    },
    {
      question:
        "Parmi ces propositions, laquelle est orthographi√©e correctement ?",
      options: ['Il a eu tord', 'Ils se sont absaint', "Elle s'est m√©fi√©e", "Ils ont d√ªt partir"],
      answer: 2,
      explanation:
        "Le verbe pronominal 'se m√©fier' s'accorde avec le sujet f√©minin singulier : 'Elle s'est m√©fi√©e'."
    },
    {
      question:
        "Compl√©tez : 'Il se peut qu'ils ... en retard'",
      options: ['arrivent', 'arriveront', 'arriv√®rent', 'arriveraient'],
      answer: 0,
      explanation:
        "Apr√®s 'il se peut que', on emploie le subjonctif pr√©sent : 'arrivent'."
    },
    {
      question:
        "Quel mot contient un accent circonflexe obligatoire ?",
      options: ['Croute', 'Hotel', 'Jeune', 'Maitre'],
      answer: 3,
      explanation:
        "Dans 'ma√Ætre', l'accent circonflexe sur le √¢ est obligatoire en orthographe rectifi√©e ou traditionnelle."
    },
    {
      question:
        "Quelle phrase respecte la r√®gle d'accord du verbe avec un sujet compos√© ?",
      options: [
        'Ni Paul ni ses fr√®res ne vient',
        'Paul ainsi que ses fr√®res partent',
        'Paul ou ses fr√®res √™tes partis',
        'Paul avec ses fr√®res arrive'
      ],
      answer: 1,
      explanation:
        "Lorsque le sujet est compos√© de deux √©l√©ments reli√©s par 'ainsi que', le verbe se met au pluriel : 'partent'."
    }
  ],
  vocabulaire: [
    {
      question:
        "Quel est le sens du pr√©fixe 'pr√©-' dans les mots 'pr√©voir' ou 'pr√©lire' ?",
      options: ['√Ä travers', 'Apr√®s', 'Avant', 'En sens contraire'],
      answer: 2,
      explanation:
        "Le pr√©fixe 'pr√©-' exprime l'ant√©riorit√© : pr√©voir, pr√©lire signifient faire une action avant."
    },
    {
      question:
        "Quel est le synonyme le plus pr√©cis du mot 'taciturne' ?",
      options: ['Bavard', 'Discret', 'Silencieux', 'Inquiet'],
      answer: 2,
      explanation:
        "Une personne taciturne parle peu, elle est silencieuse voire renferm√©e."
    },
    {
      question:
        "√Ä quel champ lexical appartient principalement le mot 'incl√©mence' ?",
      options: ['La m√©t√©o', 'La justice', 'La musique', 'La m√©decine'],
      answer: 0,
      explanation:
        "L'incl√©mence √©voque une rigueur, une duret√© du climat : vent, froid ou pluie violente."
    },
    {
      question:
        "Quel est l'antonyme du verbe 'corroborer' ?",
      options: ['Confirmer', 'R√©futer', 'Renforcer', 'Illustrer'],
      answer: 1,
      explanation:
        "'Corroborer' signifie confirmer. Son antonyme attendu est 'r√©futer'."
    },
    {
      question:
        "Dans quel contexte emploie-t-on le mot 'ubiquit√©' ?",
      options: [
        'Pour d√©crire un raisonnement logique',
        "Pour qualifier la pr√©sence simultan√©e en plusieurs lieux",
        'Pour d√©signer une √©motion fugace',
        "Pour parler d'une transformation chimique"
      ],
      answer: 1,
      explanation:
        "L'ubiquit√© caract√©rise le fait d'√™tre pr√©sent en plusieurs endroits au m√™me moment."
    },
    {
      question:
        "Quel suffixe permet de former un nom d√©signant une action ?",
      options: ['-ment', '-able', '-eux', '-if'],
      answer: 0,
      explanation:
        "Le suffixe '-ment' (ch√¢timent, d√©ploiement) cr√©e des noms d'action ou leur r√©sultat."
    }
  ],
  conjugaison: [
    {
      question:
        "Conjuguez le verbe 'croire' √† la 3·µâ personne du pluriel du subjonctif pr√©sent :",
      options: ['Qu‚Äôils croivent', 'Qu‚Äôils croient', 'Qu‚Äôils crurent', 'Qu‚Äôils croiraient'],
      answer: 1,
      explanation:
        "Le subjonctif pr√©sent de 'croire' donne : que je croie, que nous croyions, qu‚Äôils croient."
    },
    {
      question:
        "√Ä quel temps est conjugu√© le verbe soulign√© : 'Si tu avais r√©vis√©, tu aurais r√©ussi' ?",
      options: ['Plus-que-parfait', 'Pass√© ant√©rieur', 'Futur ant√©rieur', 'Pass√© compos√©'],
      answer: 0,
      explanation:
        "'Avais r√©vis√©' est conjugu√© au plus-que-parfait, temps de l'hypoth√®se non r√©alis√©e."
    },
    {
      question:
        "Quelle transformation permet de passer de la voix active √† la voix passive ?",
      options: [
        "Le compl√©ment d'objet indirect devient sujet",
        "Le compl√©ment d'objet direct devient sujet",
        'Le verbe reste inchang√©',
        "Le sujet reste sujet"
      ],
      answer: 1,
      explanation:
        "√Ä la voix passive, le COD du verbe actif devient sujet du verbe auxiliaire + participe pass√©."
    },
    {
      question:
        "Conjuguez 'vaincre' √† la 1·µâ ≥e personne du pluriel du pass√© simple :",
      options: ['Nous vainqu√Æmes', 'Nous vainquons', 'Nous vaincrons', 'Nous vainquissions'],
      answer: 0,
      explanation:
        "Au pass√© simple : je vainquis, nous vainqu√Æmes."
    },
    {
      question:
        "Quel temps utilise-t-on principalement dans les r√©cits au pr√©sent pour marquer un retour en arri√®re ?",
      options: ['Le conditionnel pr√©sent', 'Le pass√© compos√©', "L'imparfait", 'Le plus-que-parfait'],
      answer: 3,
      explanation:
        "Le plus-que-parfait indique une ant√©riorit√© par rapport au point de r√©f√©rence du r√©cit."
    },
    {
      question:
        "Quelle terminaison convient pour le participe pr√©sent du verbe 'convaincre' ?",
      options: ['Convaincant', 'Convainquant', 'Convaincu', 'Convainc'],
      answer: 1,
      explanation:
        "Le participe pr√©sent se forme sur le radical du verbe + -ant : convainquant."
    }
  ],
  litterature: [
    {
      question: "Qui est l'auteur de 'La Parure' √©tudi√©e en 3·µâ ?",
      options: ['Victor Hugo', '√âmile Zola', 'Guy de Maupassant', 'Honor√© de Balzac'],
      answer: 2,
      explanation:
        "'La Parure' est une nouvelle r√©aliste √©crite par Guy de Maupassant en 1884."
    },
    {
      question: "Quel mouvement litt√©raire associe-t-on principalement √† Victor Hugo ?",
      options: ['Le classicisme', 'Le romantisme', 'Le r√©alisme', 'Le symbolisme'],
      answer: 1,
      explanation:
        "Victor Hugo est une figure majeure du romantisme fran√ßais."
    },
    {
      question:
        "Quel genre de texte est privil√©gi√© pour d√©noncer une injustice dans la presse au XIX·µâ si√®cle ?",
      options: ['La fable', 'Le po√®me lyrique', "L'article argumentatif", 'Le conte merveilleux'],
      answer: 2,
      explanation:
        "L'article argumentatif ou le plaidoyer permettent de d√©fendre une cause et convaincre le lecteur."
    },
    {
      question:
        "Dans quel roman retrouve-t-on le personnage de Jean Valjean ?",
      options: ['Le Rouge et le Noir', 'Germinal', 'Les Mis√©rables', 'Madame Bovary'],
      answer: 2,
      explanation:
        "Jean Valjean est le h√©ros des 'Mis√©rables' de Victor Hugo."
    },
    {
      question:
        "Quelle est la vis√©e principale d'un apologue comme une fable de La Fontaine ?",
      options: ['Divertir sans r√©fl√©chir', 'Raconter une histoire vraie', 'Instruire en amusant', 'D√©crire un paysage'],
      answer: 2,
      explanation:
        "L'apologue associe le plaisir de la fiction √† une le√ßon morale : instruire en amusant."
    },
    {
      question:
        "Quel registre privil√©gie-t-on pour susciter l'√©motion et la compassion du lecteur ?",
      options: ['Le registre √©pique', 'Le registre lyrique', 'Le registre path√©tique', 'Le registre comique'],
      answer: 2,
      explanation:
        "Le registre path√©tique vise √† √©mouvoir et √† inspirer la compassion."
    }
  ],
  expression: [
    {
      question:
        "Quelle structure convient pour soutenir une th√®se dans un d√©veloppement argumentatif ?",
      options: [
        'Encha√Æner des anecdotes sans lien',
        'Pr√©senter une th√®se, des arguments et des exemples',
        'Multiplier les questions rh√©toriques',
        'Employer uniquement le registre lyrique'
      ],
      answer: 1,
      explanation:
        "Un paragraphe argumentatif solide comporte une id√©e directrice, un argument et un exemple pr√©cis."
    },
    {
      question:
        "Quel connecteur logique introduit une cons√©quence ?",
      options: ['Cependant', 'Par cons√©quent', 'D‚Äôune part', '√Ä l‚Äôinverse'],
      answer: 1,
      explanation:
        "'Par cons√©quent' ou 'ainsi' marquent une relation de cons√©quence entre deux propositions."
    },
    {
      question:
        "Pour varier son vocabulaire en expression √©crite, quelle strat√©gie est pertinente ?",
      options: [
        'Utiliser des mots tr√®s familiers',
        "Employer des synonymes pr√©cis et adapt√©s au contexte",
        'R√©p√©ter les m√™mes termes pour √™tre clair',
        'Supprimer tous les adjectifs'
      ],
      answer: 1,
      explanation:
        "Enrichir son lexique passe par le recours √† des synonymes justes et vari√©s."
    },
    {
      question:
        "Que faut-il v√©rifier en conclusion d'une r√©daction argumentative ?",
      options: [
        "Qu'on ajoute une nouvelle id√©e",
        "Qu'on ouvre sur une r√©flexion plus large et qu'on rappelle la th√®se",
        'Qu‚Äôon recopie l‚Äôintroduction',
        'Qu‚Äôon utilise le pr√©sent de narration'
      ],
      answer: 1,
      explanation:
        "La conclusion rappelle l'essentiel de l'argumentation et √©largit vers une ouverture."
    },
    {
      question:
        "Quel temps privil√©gier pour un r√©cit d'imagination men√© au pass√© ?",
      options: ['Pr√©sent simple', 'Imparfait pour le cadre et pass√© simple pour les actions', 'Pass√© compos√© uniquement', 'Futur simple'],
      answer: 1,
      explanation:
        "On installe le d√©cor avec l'imparfait et on raconte les actions principales au pass√© simple."
    },
    {
      question:
        "Quel outil stylistique renforce une argumentation en donnant la parole √† un auteur reconnu ?",
      options: ['La description', 'La citation', 'Le dialogue', 'La personnification'],
      answer: 1,
      explanation:
        "Citer une autorit√© renforce la cr√©dibilit√© d‚Äôune argumentation."
    }
  ],
  comprehension: [
    {
      question:
        "Que d√©signe l'implicite d'un texte litt√©raire ?",
      options: [
        'Les informations explicites',
        'Les sous-entendus que le lecteur doit d√©duire',
        "Les citations d'un autre auteur",
        "Les √©l√©ments de la mise en page"
      ],
      answer: 1,
      explanation:
        "L'implicite correspond √† ce qui n'est pas dit directement mais qu'on comprend en lisant attentivement."
    },
    {
      question:
        "Quelle d√©marche adopter pour analyser un portrait dans un r√©cit ?",
      options: [
        'Identifier les champs lexicaux et leur effet',
        'Ignorer les adjectifs',
        'Chercher uniquement des comparaisons',
        'Relever les verbes au futur'
      ],
      answer: 0,
      explanation:
        "Les champs lexicaux r√©v√®lent la tonalit√© du portrait et l'intention de l'auteur."
    },
    {
      question:
        "Quand on vous demande de justifier une r√©ponse √† partir d‚Äôun texte, que doit-on fournir ?",
      options: [
        'Un avis personnel',
        'Une citation pr√©cise ou une reformulation fid√®le',
        'Un r√©sum√© du texte entier',
        "Une nouvelle question"
      ],
      answer: 1,
      explanation:
        "Justifier suppose d'appuyer son id√©e sur une citation exacte ou une reformulation rigoureuse du passage."
    },
    {
      question:
        "Quel indicateur permet de rep√©rer un changement de point de vue dans un r√©cit ?",
      options: [
        'Les variations de pronoms personnels',
        'Les temps du futur',
        'Les figures de style',
        'Les interrogations indirectes'
      ],
      answer: 0,
      explanation:
        "Le passage du 'je' au 'il' ou l'apparition de termes √©valuatifs montre un changement de focalisation."
    },
    {
      question:
        "Que signifie l'expression 'faire une inf√©rence' lors d'une lecture ?",
      options: [
        'Inventer un passage',
        'Relier deux informations pour d√©duire une conclusion',
        'Choisir un nouveau th√®me',
        'Changer de paragraphe'
      ],
      answer: 1,
      explanation:
        "L'inf√©rence est l'op√©ration intellectuelle qui consiste √† d√©duire une information implicite."
    },
    {
      question:
        "Quel type de question demande d'identifier la structure d'un texte ?",
      options: [
        'Question de vocabulaire',
        'Question de grammaire',
        'Question d‚Äôorganisation',
        'Question d‚Äôorthographe'
      ],
      answer: 2,
      explanation:
        "Analyser la structure revient √† rep√©rer l'organisation du texte : narration, description, argumentation..."
    }
  ],
  figures: [
    {
      question:
        "Identifiez la figure de style : 'La Terre est bleue comme une orange' (√âluard).",
      options: ['Hyperbole', 'Comparaison', 'M√©taphore', 'Personnification'],
      answer: 1,
      explanation:
        "L'emploi de 'comme' rapproche deux r√©alit√©s : c'est une comparaison surprenante."
    },
    {
      question: "Quelle figure consiste √† attribuer des comportements humains √† un objet ?",
      options: ['Antiphrase', 'Personnification', 'M√©tonymie', 'Euph√©misme'],
      answer: 1,
      explanation:
        "La personnification donne des traits humains √† un objet ou √† une id√©e abstraite."
    },
    {
      question:
        "Quel proc√©d√© est √† l'≈ìuvre dans : 'Je meurs de faim' ?",
      options: ['Antith√®se', 'Litote', 'Hyperbole', 'P√©riphrase'],
      answer: 2,
      explanation:
        "'Je meurs de faim' exag√®re volontairement la situation : c'est une hyperbole."
    },
    {
      question:
        "Quel nom donne-t-on √† la r√©p√©tition d'un m√™me son consonantique ?",
      options: ['Allit√©ration', 'Assonance', 'Anaphore', 'Gradation'],
      answer: 0,
      explanation:
        "L'allit√©ration est la r√©p√©tition d'un son consonantique pour cr√©er un effet sonore."
    },
    {
      question:
        "Quelle figure rapproche deux r√©alit√©s sans outil de comparaison ?",
      options: ['Comparaison', 'M√©taphore', 'Oxymore', 'Hyperbole'],
      answer: 1,
      explanation:
        "La m√©taphore associe deux r√©alit√©s directement, sans 'comme', 'tel', etc."
    },
    {
      question:
        "Quel proc√©d√© est utilis√© dans : 'Cette obscure clart√© qui tombe des √©toiles' ?",
      options: ['Antith√®se', 'Oxymore', 'Pl√©onasme', 'Gradation'],
      answer: 1,
      explanation:
        "L'association de deux termes contraires 'obscure' et 'clart√©' forme un oxymore."
    }
  ]
};
const state = {
  currentQuiz: [],
  currentQuestionIndex: 0,
  selectedOption: null,
  score: 0,
  stats: {
    totalQuizzes: 0,
    totalQuestions: 0,
    correctAnswers: 0,
    themeStats: themes.reduce((acc, theme) => {
      acc[theme.id] = { correct: 0, total: 0 };
      return acc;
    }, {})
  }
};

const elements = {
  themeGrid: document.getElementById('theme-grid'),
  startQuiz: document.getElementById('start-quiz'),
  showThemes: document.getElementById('show-themes'),
  themeSection: document.getElementById('theme-section'),
  strengthList: document.getElementById('strength-list'),
  weaknessList: document.getElementById('weakness-list'),
  quizScreen: document.getElementById('quiz-screen'),
  resultsScreen: document.getElementById('results-screen'),
  quizTheme: document.getElementById('quiz-theme'),
  quizQuestion: document.getElementById('quiz-question'),
  quizOptions: document.getElementById('quiz-options'),
  quizExplanation: document.getElementById('quiz-explanation'),
  showAnswer: document.getElementById('show-answer'),
  nextQuestion: document.getElementById('next-question'),
  backToMenu: document.getElementById('back-to-menu'),
  progressBar: document.getElementById('progress-bar'),
  quizScore: document.getElementById('quiz-score'),
  resultsTitle: document.getElementById('results-title'),
  resultsSummary: document.getElementById('results-summary'),
  resultsGrid: document.getElementById('results-grid'),
  retryFocus: document.getElementById('retry-focus'),
  retryRandom: document.getElementById('retry-random'),
  resultsMenu: document.getElementById('results-menu'),
  statTotalQuizzes: document.getElementById('stat-total-quizzes'),
  statTotalQuestions: document.getElementById('stat-total-questions'),
  statSuccessRate: document.getElementById('stat-success-rate')
};

const accuracy = (correct, total) => (total === 0 ? 0 : Math.round((correct / total) * 100));

function scrollToSection(section) {
  section.scrollIntoView({ behavior: 'smooth' });
}

function renderThemeCards() {
  elements.themeGrid.innerHTML = '';
  themes.forEach((theme) => {
    const card = document.createElement('article');
    card.className = 'theme-card';
    card.innerHTML = `
      <span class="theme-card__icon">${theme.icon}</span>
      <h3 class="theme-card__title">${theme.name}</h3>
      <p class="theme-card__description">${theme.description}</p>
      <button class="theme-card__cta btn btn--secondary" data-theme="${theme.id}">
        <span>D√©fier ce th√®me</span>
        <span>‚Üí</span>
      </button>
    `;
    elements.themeGrid.appendChild(card);
  });

  elements.themeGrid.querySelectorAll('button').forEach((button) => {
    button.addEventListener('click', (event) => {
      const themeId = event.currentTarget.getAttribute('data-theme');
      launchQuiz({ themeId });
    });
  });
}

function getWeakThemes(limit = 3) {
  const statsArray = themes.map((theme) => {
    const data = state.stats.themeStats[theme.id];
    const total = data.total;
    const acc = total === 0 ? 50 : (data.correct / total) * 100;
    return { ...theme, total, accuracy: acc };
  });

  return statsArray
    .sort((a, b) => a.accuracy - b.accuracy || b.total - a.total)
    .slice(0, limit);
}

function getStrongThemes(limit = 3) {
  const statsArray = themes.map((theme) => {
    const data = state.stats.themeStats[theme.id];
    const total = data.total;
    const acc = total === 0 ? 0 : (data.correct / total) * 100;
    return { ...theme, total, accuracy: acc };
  });

  return statsArray
    .filter((theme) => theme.total > 0)
    .sort((a, b) => b.accuracy - a.accuracy || b.total - a.total)
    .slice(0, limit);
}

function renderFocusPanels() {
  const strengths = getStrongThemes();
  const weaknesses = getWeakThemes();

  const strengthContent = strengths.length
    ? strengths
        .map(
          (item) => `
          <li class="focus-list__item">
            <span>${item.icon} ${item.name}</span>
            <span class="focus-list__badge focus-list__badge--good">${Math.round(item.accuracy)} %</span>
          </li>
        `
        )
        .join('')
    : '<li class="focus-list__item">R√©ponds √† quelques questions pour r√©v√©ler tes points forts !</li>';

  const weaknessContent = weaknesses
    .map((item) => {
      const displayAcc = item.total === 0 ? 'N.C.' : `${Math.round(item.accuracy)} %`;
      return `
        <li class="focus-list__item">
          <span>${item.icon} ${item.name}</span>
          <span class="focus-list__badge focus-list__badge--alert">${displayAcc}</span>
        </li>
      `;
    })
    .join('');

  elements.strengthList.innerHTML = strengthContent;
  elements.weaknessList.innerHTML = weaknessContent;
}

function updateGlobalStatsDisplay() {
  const { totalQuizzes, totalQuestions, correctAnswers } = state.stats;
  const successRate = accuracy(correctAnswers, totalQuestions);
  elements.statTotalQuizzes.textContent = totalQuizzes;
  elements.statTotalQuestions.textContent = totalQuestions;
  elements.statSuccessRate.textContent = `${successRate}%`;
}

function pickThemeWeighted(possibleThemes, weights) {
  const totalWeight = possibleThemes.reduce((sum, themeId) => sum + (weights[themeId] || 1), 0);
  let r = Math.random() * totalWeight;
  for (const themeId of possibleThemes) {
    r -= weights[themeId] || 1;
    if (r <= 0) {
      return themeId;
    }
  }
  return possibleThemes[possibleThemes.length - 1];
}

function buildQuiz({ themeId = null, focus = false } = {}) {
  const usedQuestions = new Set();
  const quiz = [];
  const themeStats = state.stats.themeStats;

  const availableThemes = (() => {
    if (themeId) return [themeId];
    if (focus) {
      const weakThemes = getWeakThemes(4).map((theme) => theme.id);
      return weakThemes.length ? weakThemes : themes.map((theme) => theme.id);
    }
    return themes.map((theme) => theme.id);
  })();

  const weights = {};
  availableThemes.forEach((id) => {
    const data = themeStats[id];
    const total = data.total;
    const acc = total === 0 ? 0.6 : data.correct / total;
    let weight = 1 + (1 - acc) * 2;
    if (focus) {
      weight += (1 - acc) * 3;
    }
    weights[id] = Math.max(weight, 0.5);
  });

  const fallbackThemes = themes.map((theme) => theme.id);

  while (quiz.length < 10) {
    const pool = availableThemes.length ? availableThemes : fallbackThemes;
    const chosenTheme = pickThemeWeighted(pool, weights);
    const questions = questionBank[chosenTheme];
    const available = questions
      .map((question, index) => ({ ...question, theme: chosenTheme, uid: `${chosenTheme}-${index}` }))
      .filter((question) => !usedQuestions.has(question.uid));

    if (!available.length) {
      const index = availableThemes.indexOf(chosenTheme);
      if (index !== -1) availableThemes.splice(index, 1);
      if (!availableThemes.length && pool === availableThemes) {
        availableThemes.push(...fallbackThemes.filter((id) => !availableThemes.includes(id)));
      }
      continue;
    }

    const selected = available[Math.floor(Math.random() * available.length)];
    usedQuestions.add(selected.uid);
    quiz.push(selected);
  }

  return quiz;
}
function launchQuiz({ themeId = null, focus = false } = {}) {
  state.currentQuiz = buildQuiz({ themeId, focus });
  if (state.currentQuiz.length === 0) {
    alert("Impossible de g√©n√©rer un quiz : la banque de questions est vide.");
    return;
  }
  state.currentQuestionIndex = 0;
  state.selectedOption = null;
  state.score = 0;
  elements.quizScore.textContent = '0';
  elements.progressBar.style.width = '0%';
  showScreen('quiz');
  renderQuestion();
}

function showScreen(screen) {
  if (screen === 'quiz') {
    elements.quizScreen.hidden = false;
    elements.resultsScreen.hidden = true;
  } else if (screen === 'results') {
    elements.quizScreen.hidden = true;
    elements.resultsScreen.hidden = false;
  } else {
    elements.quizScreen.hidden = true;
    elements.resultsScreen.hidden = true;
  }
}

function renderQuestion() {
  const questionData = state.currentQuiz[state.currentQuestionIndex];
  const theme = themes.find((theme) => theme.id === questionData.theme);
  elements.quizTheme.textContent = `${theme.icon} ${theme.name}`;
  elements.quizQuestion.textContent = questionData.question;
  elements.quizExplanation.hidden = true;
  elements.quizExplanation.textContent = questionData.explanation;
  elements.showAnswer.disabled = true;
  elements.nextQuestion.disabled = true;
  elements.showAnswer.textContent = 'Valider la r√©ponse';
  elements.quizOptions.innerHTML = '';

  questionData.options.forEach((option, index) => {
    const button = document.createElement('button');
    button.className = 'quiz__option';
    button.innerHTML = `
      <span class="quiz__option-index">${String.fromCharCode(65 + index)}.</span>
      <span>${option}</span>
    `;
    button.addEventListener('click', () => handleOptionSelect(button, index));
    elements.quizOptions.appendChild(button);
  });

  updateProgressBar();
}

function handleOptionSelect(button, index) {
  state.quizOptionsButtons = Array.from(elements.quizOptions.querySelectorAll('button'));
  state.quizOptionsButtons.forEach((btn) => btn.classList.remove('quiz__option--selected'));
  button.classList.add('quiz__option--selected');
  state.selectedOption = index;
  elements.showAnswer.disabled = false;
}

function validateAnswer() {
  if (state.selectedOption === null) return;
  const questionData = state.currentQuiz[state.currentQuestionIndex];
  const correctIndex = questionData.answer;
  const buttons = Array.from(elements.quizOptions.querySelectorAll('button'));
  const isCorrect = state.selectedOption === correctIndex;

  buttons.forEach((btn, index) => {
    btn.disabled = true;
    btn.classList.remove('quiz__option--selected');
    if (index === correctIndex) {
      btn.classList.add('quiz__option--correct');
    }
    if (index === state.selectedOption && index !== correctIndex) {
      btn.classList.add('quiz__option--wrong');
    }
  });

  if (isCorrect) {
    state.score += 1;
    elements.quizScore.textContent = state.score;
  }

  elements.quizExplanation.hidden = false;
  elements.showAnswer.disabled = true;
  elements.nextQuestion.disabled = false;
  elements.showAnswer.textContent = 'R√©ponse valid√©e';

  const themeStats = state.stats.themeStats[questionData.theme];
  themeStats.total += 1;
  if (isCorrect) themeStats.correct += 1;
  state.stats.totalQuestions += 1;
  if (isCorrect) state.stats.correctAnswers += 1;

  state.currentQuiz[state.currentQuestionIndex].isCorrect = isCorrect;

  state.selectedOption = null;
  renderFocusPanels();
  updateGlobalStatsDisplay();
}

function nextQuestion() {
  if (state.currentQuestionIndex < state.currentQuiz.length - 1) {
    state.currentQuestionIndex += 1;
    state.selectedOption = null;
    renderQuestion();
  } else {
    finishQuiz();
  }
}

function finishQuiz() {
  state.stats.totalQuizzes += 1;
  updateGlobalStatsDisplay();
  renderResults();
  showScreen('results');
}

function renderResults() {
  const totalQuestions = state.currentQuiz.length;
  const percent = accuracy(state.score, totalQuestions);
  elements.resultsTitle.textContent = percent >= 80 ? 'Excellent !' : percent >= 60 ? 'Tr√®s bon travail !' : 'On continue !';
  elements.resultsSummary.textContent = `Tu viens de terminer une s√©rie de ${totalQuestions} questions exigeantes pour ${state.score} bonnes r√©ponses. L'algorithme a ajust√© ta carte de progression : concentre-toi sur les th√®mes en orange. Aussit√¥t pr√™t ? Relance une s√©rie cibl√©e !`;

  const perTheme = {};
  state.currentQuiz.forEach((question) => {
    const themeId = question.theme;
    if (!perTheme[themeId]) {
      perTheme[themeId] = { total: 0, correct: 0 };
    }
    perTheme[themeId].total += 1;
    if (question.isCorrect) perTheme[themeId].correct += 1;
  });

  elements.resultsGrid.innerHTML = Object.entries(perTheme)
    .map(([themeId, data]) => {
      const theme = themes.find((item) => item.id === themeId);
      const ratio = accuracy(data.correct, data.total);
      return `
        <div class="results__item">
          <h4>${theme.icon} ${theme.name}</h4>
          <p>${data.correct} / ${data.total} bonnes r√©ponses (${ratio} %)</p>
        </div>
      `;
    })
    .join('');
}

function updateProgressBar() {
  const progress = (state.currentQuestionIndex / state.currentQuiz.length) * 100;
  elements.progressBar.style.width = `${progress}%`;
}

function resetQuizState() {
  state.currentQuiz = [];
  state.currentQuestionIndex = 0;
  state.selectedOption = null;
  state.score = 0;
  elements.quizScore.textContent = '0';
  elements.quizExplanation.hidden = true;
  elements.nextQuestion.disabled = true;
  elements.showAnswer.disabled = true;
  elements.progressBar.style.width = '0%';
}

function initEventListeners() {
  elements.startQuiz.addEventListener('click', () => launchQuiz());
  elements.showThemes.addEventListener('click', () => scrollToSection(elements.themeSection));
  elements.backToMenu.addEventListener('click', () => {
    resetQuizState();
    showScreen('menu');
  });
  elements.showAnswer.addEventListener('click', validateAnswer);
  elements.nextQuestion.addEventListener('click', nextQuestion);
  elements.retryRandom.addEventListener('click', () => {
    showScreen('menu');
    launchQuiz();
  });
  elements.retryFocus.addEventListener('click', () => {
    showScreen('menu');
    launchQuiz({ focus: true });
  });
  elements.resultsMenu.addEventListener('click', () => {
    showScreen('menu');
    resetQuizState();
  });
}

function init() {
  renderThemeCards();
  renderFocusPanels();
  updateGlobalStatsDisplay();
  initEventListeners();
}

init();
